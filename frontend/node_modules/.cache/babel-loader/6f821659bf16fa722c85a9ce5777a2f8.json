{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmick\\\\Documents\\\\eget\\\\songplacer\\\\SongPlacer\\\\frontend\\\\src\\\\pages\\\\explore\\\\NearMe.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../../context';\nimport Axios from 'axios';\nimport Globals from '../../globals/Globals.css';\nimport ListedSongPlace from '../../components/common/ListedSongplace';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlay, faCirclePause } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SUCCESS = 0;\nconst FAIL = 1;\nconst LOADING = 2;\nconst UNKNOWN = 3;\nconst PLAYING = 4;\nconst PAUSED = 5;\nconst UNSUPPORTED = 6;\n\nconst NearMe = () => {\n  _s();\n\n  const userContext = useContext(UserContext);\n  const userId = userContext.userId; //used to store/set songplaces \n\n  const [songplaces, setSongplaces] = useState(); //used to make page render\n\n  const [updSwitch, setUpdSwitch] = useState(false); //used to store/set user position\n\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState(); //get songplaces status\n\n  const [retrieveStatus, setRetrieveStatus] = useState(UNKNOWN); //play, paused, or failed\n\n  const [play, setPlay] = useState(PAUSED);\n\n  const setCoordinates = position => {\n    setLat(position.coords.latitude);\n    setLong(position.coords.longitude);\n  };\n\n  const getCoordinatesErrorHandle = () => {\n    setLat();\n    setLong();\n    setPlay(FAIL);\n  };\n\n  const getUserPosition = () => {\n    if (!navigator.geolocation) {\n      setPlay(UNSUPPORTED);\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(setCoordinates, getCoordinatesErrorHandle);\n  };\n  /**\r\n   * Fetches songplaces after render \r\n   */\n\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/get-songplaces\").then(response => {\n      if (response.status != 200) {\n        console.log(\"get songplaces response: \" + response);\n        setRetrieveStatus(FAIL);\n        return;\n      }\n\n      console.log(\"get songplaces response: \" + JSON.stringify(response));\n      setSongplaces(response.data);\n      setRetrieveStatus(SUCCESS);\n    }).catch(err => {\n      console.log(\"get songplaces error\");\n      setRetrieveStatus(FAIL);\n    });\n  }, []);\n  /**\r\n  * Fetches songplaces after render \r\n  */\n\n  useEffect(() => {\n    console.log(\"useEffect of toggling play\");\n    orderByCurrentLocation();\n  }, [play]);\n  /**\r\n   * Calculate distance between two points a and b of lat and long. \r\n   * Taken from: https://www.movable-type.co.uk/scripts/latlong.html\r\n   * @param aLat point a latitude\r\n   * @param aLong point a longitude\r\n   * @param bLat point b latitude\r\n   * @param bLong point b longitude\r\n   * @returns distance between given points\r\n   */\n\n  const calcDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3; // metres\n\n    const φ1 = lat1 * Math.PI / 180; // φ, λ in radians\n\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // in metres\n\n    console.log(\"distance: \" + distance);\n    return distance;\n  };\n  /**\r\n   * Orders songplaces by proximity to given position \r\n   */\n\n\n  const orderByNearest = () => {\n    if (lat == null || long == null) {\n      return;\n    }\n\n    if (songplaces == null) {\n      setRetrieveStatus(FAIL);\n      return;\n    }\n\n    songplaces.sort(function (songplaceA, songplaceB) {\n      let aDistance = calcDistance(songplaceA.latitude, songplaceA.longitude, lat, long);\n      let bDistance = calcDistance(songplaceB.latitude, songplaceB.longitude, lat, long);\n      return aDistance - bDistance;\n    });\n  };\n  /**\r\n   * Gets user position and orders songplaces by proximity. \r\n   * If auto play on, keeps doing so every 20seconds. \r\n   */\n\n\n  const orderByCurrentLocation = () => {\n    if (play === UNSUPPORTED || play === FAIL) {\n      return;\n    }\n\n    getUserPosition();\n    orderByNearest();\n\n    if (PLAYING) {\n      setTimeout(orderByCurrentLocation, 20000); //20 seconds\n    }\n  };\n\n  const toggleAutoPlay = () => {\n    if (play === PLAYING) {\n      setPlay(PAUSED);\n    } else {\n      setPlay(PLAYING);\n    }\n  };\n\n  if (play === UNSUPPORTED) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"margin-top\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Auto play not supported in browser :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (play === FAIL || retrieveStatus === FAIL) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"margin-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Could not get music by location :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"margin-top\",\n    children: [play === PLAYING ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Playing music from: (  \", lat, \", \", long, \" )\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleAutoPlay(),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCirclePause,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Play local music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleAutoPlay(),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCirclePlay,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), retrieveStatus === LOADING ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), //return songplaces if they are retrieved\n    retrieveStatus === SUCCESS ? songplaces.map((songplace, index) => /*#__PURE__*/_jsxDEV(ListedSongPlace, {\n      songplace: songplace,\n      isOwned: false,\n      playlistId: -1\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NearMe, \"iKtsmuzR3ZryxpAZxVqBIjg/v7M=\");\n\n_c = NearMe;\nexport default NearMe;\n\nvar _c;\n\n$RefreshReg$(_c, \"NearMe\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UserContext","Axios","Globals","ListedSongPlace","FontAwesomeIcon","faCirclePlay","faCirclePause","SUCCESS","FAIL","LOADING","UNKNOWN","PLAYING","PAUSED","UNSUPPORTED","NearMe","userContext","userId","songplaces","setSongplaces","updSwitch","setUpdSwitch","lat","setLat","long","setLong","retrieveStatus","setRetrieveStatus","play","setPlay","setCoordinates","position","coords","latitude","longitude","getCoordinatesErrorHandle","getUserPosition","navigator","geolocation","getCurrentPosition","get","then","response","status","console","log","JSON","stringify","data","catch","err","orderByCurrentLocation","calcDistance","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","distance","orderByNearest","sort","songplaceA","songplaceB","aDistance","bDistance","setTimeout","toggleAutoPlay","window","location","reload","map","songplace","index"],"sources":["C:/Users/mmick/Documents/eget/songplacer/SongPlacer/frontend/src/pages/explore/NearMe.js"],"sourcesContent":["import {React, useState, useEffect, useContext} from 'react';\r\nimport { UserContext } from '../../context';\r\nimport Axios from 'axios';\r\nimport Globals from '../../globals/Globals.css';\r\nimport ListedSongPlace from '../../components/common/ListedSongplace';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCirclePlay, faCirclePause } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SUCCESS = 0;\r\nconst FAIL = 1;\r\nconst LOADING = 2;\r\nconst UNKNOWN = 3;\r\n\r\nconst PLAYING = 4;\r\nconst PAUSED = 5;\r\nconst UNSUPPORTED = 6;\r\n\r\n\r\n\r\nconst NearMe = () => {\r\n\r\n    const userContext = useContext(UserContext);\r\n    const userId = userContext.userId;\r\n\r\n     //used to store/set songplaces \r\n     const [songplaces, setSongplaces] = useState();\r\n\r\n    //used to make page render\r\n    const [updSwitch, setUpdSwitch] = useState(false);\r\n\r\n    //used to store/set user position\r\n    const [lat, setLat] = useState();\r\n    const [long, setLong] = useState();\r\n\r\n    //get songplaces status\r\n    const [retrieveStatus, setRetrieveStatus] = useState(UNKNOWN);\r\n\r\n    //play, paused, or failed\r\n    const [play, setPlay] = useState(PAUSED);\r\n\r\n\r\n    const setCoordinates = (position) => {\r\n        setLat(position.coords.latitude);\r\n        setLong(position.coords.longitude);\r\n    }\r\n\r\n    const getCoordinatesErrorHandle = () => {\r\n        setLat();\r\n        setLong();\r\n        setPlay(FAIL);\r\n    }\r\n\r\n\r\n    const getUserPosition = () => {\r\n        if (!navigator.geolocation) {\r\n            setPlay(UNSUPPORTED);\r\n            return;\r\n        } \r\n\r\n        navigator.geolocation.getCurrentPosition(setCoordinates, getCoordinatesErrorHandle);\r\n    }\r\n\r\n\r\n    /**\r\n     * Fetches songplaces after render \r\n     */\r\n    useEffect(()=> {\r\n        Axios.get(\"http://localhost:3001/get-songplaces\").then((response) => {\r\n            if (response.status != 200) {\r\n                console.log(\"get songplaces response: \" + response);\r\n                setRetrieveStatus(FAIL);\r\n                return;\r\n            }   \r\n            console.log(\"get songplaces response: \" + JSON.stringify(response));\r\n            setSongplaces(response.data);\r\n            setRetrieveStatus(SUCCESS);\r\n        }).catch((err) => {\r\n            console.log(\"get songplaces error\");\r\n            setRetrieveStatus(FAIL);\r\n        });\r\n    }, []);\r\n\r\n     /**\r\n     * Fetches songplaces after render \r\n     */\r\n      useEffect(()=> {\r\n        console.log(\"useEffect of toggling play\")\r\n        orderByCurrentLocation();\r\n    }, [play]);\r\n\r\n\r\n    /**\r\n     * Calculate distance between two points a and b of lat and long. \r\n     * Taken from: https://www.movable-type.co.uk/scripts/latlong.html\r\n     * @param aLat point a latitude\r\n     * @param aLong point a longitude\r\n     * @param bLat point b latitude\r\n     * @param bLong point b longitude\r\n     * @returns distance between given points\r\n     */\r\n    const calcDistance = (lat1, lon1, lat2, lon2) => {\r\n\r\n        const R = 6371e3; // metres\r\n        const φ1 = lat1 * Math.PI/180; // φ, λ in radians\r\n        const φ2 = lat2 * Math.PI/180;\r\n        const Δφ = (lat2-lat1) * Math.PI/180;\r\n        const Δλ = (lon2-lon1) * Math.PI/180;\r\n\r\n        const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\r\n                Math.cos(φ1) * Math.cos(φ2) *\r\n                Math.sin(Δλ/2) * Math.sin(Δλ/2);\r\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n\r\n        const distance = R * c; // in metres\r\n\r\n        console.log(\"distance: \" + distance);\r\n        \r\n        return distance;\r\n    }\r\n\r\n\r\n    /**\r\n     * Orders songplaces by proximity to given position \r\n     */\r\n     const orderByNearest = () => {\r\n        if (lat == null || long == null) {\r\n            return;\r\n        }\r\n\r\n        if (songplaces == null) {\r\n            setRetrieveStatus(FAIL);\r\n            return;\r\n        }   \r\n        \r\n        songplaces.sort(function(songplaceA, songplaceB) {\r\n            let aDistance = calcDistance(songplaceA.latitude, songplaceA.longitude, lat, long);\r\n            let bDistance = calcDistance(songplaceB.latitude, songplaceB.longitude, lat, long);\r\n\r\n            return aDistance - bDistance;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets user position and orders songplaces by proximity. \r\n     * If auto play on, keeps doing so every 20seconds. \r\n     */\r\n    const orderByCurrentLocation = () => {\r\n        if (play === UNSUPPORTED || play === FAIL) {\r\n            return;\r\n        }\r\n\r\n        getUserPosition();\r\n        orderByNearest();\r\n\r\n        if (PLAYING) {\r\n            setTimeout(orderByCurrentLocation, 20000);  //20 seconds\r\n        }\r\n    }\r\n\r\n    const toggleAutoPlay = () => {\r\n        if (play === PLAYING) {\r\n            setPlay(PAUSED);\r\n        } else {\r\n            setPlay(PLAYING);\r\n        }\r\n    }\r\n\r\n    if (play === UNSUPPORTED) {\r\n        return (\r\n            <div className=\"margin-top\">\r\n                <h2>Auto play not supported in browser :(</h2>\r\n            </div>\r\n        )\r\n    } \r\n\r\n    if (play === FAIL || retrieveStatus === FAIL) {\r\n        return (\r\n            <div className=\"margin-top\">\r\n                <h2>Could not get music by location :(</h2>\r\n                <button onClick={() => window.location.reload()}>Try again</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"margin-top\">\r\n            {\r\n                play === PLAYING ? \r\n                        <div>\r\n                            <h5>Playing music from: (  {lat}, {long} )</h5>\r\n                            <button onClick={() => toggleAutoPlay()}>\r\n                                <FontAwesomeIcon icon={faCirclePause} size='2x'/>\r\n                            </button>\r\n                        </div>\r\n                    :\r\n                        <div>\r\n                            <h5>Play local music</h5>\r\n                            <button onClick={() => toggleAutoPlay()}>\r\n                                <FontAwesomeIcon icon={faCirclePlay} size='2x'/>\r\n                            </button>\r\n                        </div>\r\n                    \r\n            }\r\n            <hr/>\r\n            {\r\n                retrieveStatus === LOADING ? \r\n                        <h2>Loading...</h2>\r\n                    :\r\n                        <></>\r\n            }\r\n            {\r\n                //return songplaces if they are retrieved\r\n                retrieveStatus === SUCCESS ? \r\n                    songplaces.map((songplace, index) => (\r\n                        <ListedSongPlace songplace={songplace} key={index} isOwned={false} playlistId={-1}/>\r\n                    ))\r\n                :\r\n                    <></>\r\n            }           \r\n        </div>\r\n    )\r\n    \r\n\r\n    \r\n}\r\n\r\nexport default NearMe;"],"mappings":"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"},"metadata":{},"sourceType":"module"}