{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmick\\\\Documents\\\\eget\\\\songplacer\\\\SongPlacer\\\\frontend\\\\src\\\\pages\\\\library\\\\Playlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport Axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../globals/Globals.css';\nimport './Library.css';\nimport { UserContext } from \"../../context\";\nimport usePages from '../usePages';\nimport ListedSongPlace from '../../components/common/ListedSongplace';\nimport { useParams } from 'react-router-dom';\nimport EditPlaylist from '../../components/common/EditPlaylist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Playlist = () => {\n  _s();\n\n  const pagesObj = usePages();\n  const pages = pagesObj.pages;\n  const context = useContext(UserContext);\n  const userId = context.userId;\n  const playlistId = window.location.href.searchParams.get('id');\n  const [songplaces, setSongplaces] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [plName, setPlaylistName] = useState(playlistName);\n  const [showEdit, setShowEdit] = useState(false);\n  const [isOwned, setIsOwned] = useState(false);\n\n  const getSongPlaces = () => {\n    //notice backticks ` \n    const getUrl = `http://localhost:3001/library/${userId}/${playlistId}/songplaces`;\n    Axios.get(getUrl).then(response => {\n      setSongplaces(response.data);\n    }).catch(err => {\n      console.log(\"get songplaces error\");\n    });\n  };\n\n  const deleteSongplaces = ids => {};\n\n  const deletePlaylistdetails = ids => {};\n  /**\r\n   * Deletes playlist (and songplaces in it). On success goes back to library. \r\n   */\n\n\n  const deletePlaylist = () => {\n    //notice backticks ` \n    const deleteUrl = `http://localhost:3001/library/${userId}/delete-playlist/${playlistId}`;\n    Axios.delete(deleteUrl).then(response => {\n      if (!response.status == 200) {\n        console.log(\"playlist could not be deleted, status = \" + response.status);\n      } else {\n        window.location.href = pages.library.fullUrl;\n      }\n    }).catch(err => {\n      console.log(\"playlist could not be deleted\");\n    });\n  };\n\n  const handleDeleteClick = () => {\n    if (window.confirm(\"Delete playlist?\")) {\n      deletePlaylist();\n    }\n  };\n  /**\r\n   * Fetches songplaces in playlist after render\r\n   */\n\n\n  useEffect(() => {\n    getSongPlaces();\n  }, []);\n  /**\r\n   * Might set loading to false (if data has been fetched), after render\r\n   */\n\n  useEffect(() => {\n    if (songplaces !== null && songplaces !== undefined) {\n      setLoading(false);\n    }\n  }, [songplaces]);\n  /**\r\n   * Check if user owns playlist and sets variable 'usersPlaylist'\r\n   */\n\n  useEffect(() => {\n    Axios.post(\"http://localhost:3001/verify-playlist-ownership\", {\n      playlistId: playlistId,\n      userId: userId\n    }).then(response => {\n      if (response.status != 200) {\n        console.log(\"Could not verify playlist ownership\");\n        setIsOwned(false);\n      }\n\n      setIsOwned(response.data.ownership);\n    }).catch(err => {\n      console.log(\"Could not verify playlist ownership\");\n      setIsOwned(false);\n    });\n  }, []); //todo: differentiate between no song-places and no data fetched\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"library-outmost margin-top\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: plName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }, this) : songplaces.map((songplace, index) => /*#__PURE__*/_jsxDEV(ListedSongPlace, {\n      songplace: songplace,\n      playlistId: playlistId,\n      isOwned: isOwned\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: window.location.href + pages.addsongplace.urlEnding,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCirclePlus,\n        size: \"4x\",\n        className: \"icon add-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), isOwned ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteClick(),\n        children: \"Delete playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowEdit(!showEdit),\n        children: \"Edit playlist name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(EditPlaylist, {\n        show: showEdit,\n        playlistId: playlistId,\n        playlistName: plName,\n        setPlaylistName: setPlaylistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Playlist, \"XQjj7b0gqsdtJrK6H+0fHr1IM4w=\", false, function () {\n  return [usePages];\n});\n\n_c = Playlist;\nexport default Playlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useEffect","useContext","useState","Axios","FontAwesomeIcon","faCirclePlus","UserContext","usePages","ListedSongPlace","useParams","EditPlaylist","Playlist","pagesObj","pages","context","userId","playlistId","window","location","href","searchParams","get","songplaces","setSongplaces","isLoading","setLoading","plName","setPlaylistName","playlistName","showEdit","setShowEdit","isOwned","setIsOwned","getSongPlaces","getUrl","then","response","data","catch","err","console","log","deleteSongplaces","ids","deletePlaylistdetails","deletePlaylist","deleteUrl","delete","status","library","fullUrl","handleDeleteClick","confirm","undefined","post","ownership","map","songplace","index","addsongplace","urlEnding"],"sources":["C:/Users/mmick/Documents/eget/songplacer/SongPlacer/frontend/src/pages/library/Playlist.js"],"sourcesContent":["import React, { useEffect, useContext, useState} from 'react';\r\nimport Axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCirclePlus } from '@fortawesome/free-solid-svg-icons'\r\nimport '../../globals/Globals.css';\r\nimport './Library.css';\r\nimport { UserContext } from \"../../context\";\r\nimport usePages from '../usePages';\r\nimport ListedSongPlace from '../../components/common/ListedSongplace';\r\nimport { useParams } from 'react-router-dom';\r\nimport EditPlaylist from '../../components/common/EditPlaylist';\r\n\r\nconst Playlist = () => {\r\n\r\n    const pagesObj = usePages();\r\n    const pages = pagesObj.pages;\r\n    \r\n    const context = useContext(UserContext);\r\n    const userId = context.userId;\r\n\r\n    const playlistId = window.location.href.searchParams.get('id');\r\n\r\n\r\n    const [songplaces, setSongplaces] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [plName, setPlaylistName] = useState(playlistName);\r\n    const [showEdit, setShowEdit] = useState(false);\r\n\r\n    const [isOwned, setIsOwned] = useState(false);\r\n\r\n   \r\n    const getSongPlaces = () => {\r\n        //notice backticks ` \r\n        const getUrl = `http://localhost:3001/library/${userId}/${playlistId}/songplaces`; \r\n\r\n        Axios.get(getUrl)\r\n        .then((response) => {\r\n            setSongplaces(response.data);\r\n        }).catch((err) => {\r\n            console.log(\"get songplaces error\");\r\n        });\r\n\r\n    }\r\n\r\n    const deleteSongplaces = (ids) => {\r\n\r\n    }\r\n\r\n    const deletePlaylistdetails = (ids) => {\r\n        \r\n    }\r\n\r\n    /**\r\n     * Deletes playlist (and songplaces in it). On success goes back to library. \r\n     */\r\n    const deletePlaylist = () => {\r\n\r\n        //notice backticks ` \r\n        const deleteUrl = `http://localhost:3001/library/${userId}/delete-playlist/${playlistId}`; \r\n\r\n        Axios.delete(deleteUrl).then((response) => {\r\n            if (!response.status == 200) {\r\n                console.log(\"playlist could not be deleted, status = \" + response.status);\r\n            } else {\r\n                window.location.href = pages.library.fullUrl;\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"playlist could not be deleted\");\r\n        });\r\n    }\r\n \r\n    const handleDeleteClick = () => {\r\n        if (window.confirm(\"Delete playlist?\")) {\r\n            deletePlaylist();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Fetches songplaces in playlist after render\r\n     */\r\n    useEffect(()=> {\r\n        getSongPlaces();\r\n    }, []);\r\n\r\n  \r\n    /**\r\n     * Might set loading to false (if data has been fetched), after render\r\n     */\r\n    useEffect(() => {\r\n        if (songplaces !== null && songplaces !== undefined) {\r\n            setLoading(false);\r\n        }\r\n    }, [songplaces]);\r\n\r\n    /**\r\n     * Check if user owns playlist and sets variable 'usersPlaylist'\r\n     */\r\n     useEffect(() => {\r\n        Axios.post(\"http://localhost:3001/verify-playlist-ownership\", {\r\n            playlistId: playlistId, \r\n            userId: userId\r\n        }).then((response) => {\r\n            if (response.status != 200) {\r\n                console.log(\"Could not verify playlist ownership\");\r\n                setIsOwned(false);\r\n            }\r\n            setIsOwned(response.data.ownership);\r\n        }).catch((err) => {\r\n            console.log(\"Could not verify playlist ownership\");\r\n            setIsOwned(false);\r\n        }); \r\n    }, []);\r\n\r\n    //todo: differentiate between no song-places and no data fetched\r\n    return ( \r\n        <div className='library-outmost margin-top'>\r\n            <h2>{plName}</h2>\r\n            {\r\n            isLoading ? \r\n                    <h2>Loading...</h2>\r\n                :\r\n                songplaces.map((songplace, index) => (\r\n                    <ListedSongPlace songplace={songplace} key={index} playlistId={playlistId} isOwned={isOwned}></ListedSongPlace>\r\n                ))\r\n            }\r\n            \r\n            <a href={window.location.href + pages.addsongplace.urlEnding}>  \r\n            <FontAwesomeIcon icon={faCirclePlus} size='4x' className='icon add-button'/>\r\n            </a>\r\n            \r\n            {\r\n                isOwned ? \r\n                        <>\r\n                            <button onClick={() => handleDeleteClick()}>Delete playlist</button>\r\n                            <button onClick={() => setShowEdit(!showEdit)}>Edit playlist name</button>\r\n                            <EditPlaylist show={showEdit} playlistId={playlistId} playlistName={plName} setPlaylistName={setPlaylistName}/>\r\n                        </>\r\n                    :\r\n                        <></>\r\n\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module"}