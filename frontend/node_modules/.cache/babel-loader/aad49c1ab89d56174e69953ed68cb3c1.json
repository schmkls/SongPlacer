{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmick\\\\Documents\\\\eget\\\\songplacer\\\\SongPlacer\\\\frontend\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport './index.css';\nimport { React, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { UserContext } from \"./context\";\nimport useToken from './useToken';\nimport Login from './pages/handleUser/Login';\nimport usePages from './pages/usePages';\n/**\r\n * Has the Document root and routes defining what should be rendered\r\n * for each route. \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _JSON$parse;\n\n  //get object with pages info\n  const pagesObj = usePages();\n  const pages = pagesObj.pages;\n  const {\n    token,\n    setToken\n  } = useToken();\n  const [elements, setElements] = useState([]);\n\n  const getElements = () => {\n    const result = [];\n    console.log(\"getting elements\");\n\n    for (var key in pages) {\n      if (!pages.hasOwnProperty(key)) {\n        continue;\n      }\n\n      var page = pages[key]; // eslint-disable-next-line eqeqeq  \n\n      if (window.location.pathname == page.path || page.path === 'all') {\n        result.push(page.element);\n      }\n    } //if only one element was found for route (Nav is always found): display 'Not found'-page     \n\n\n    if (result.length === 1) {\n      result.push(pages.notfound.element);\n    }\n\n    return result;\n  };\n\n  useEffect(() => {\n    setElements(getElements());\n  }, []);\n  /* https://www.digitalocean.com/community/tutorials/how-to-add-login-authentication-to-react-applications */\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n\n  const tokenLs = localStorage.getItem('token');\n  const userToken = (_JSON$parse = JSON.parse(tokenLs)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\n  const userId = userToken === null || userToken === void 0 ? void 0 : userToken.userId;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        userId: userId\n      },\n      children: elements.map((elem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: elem\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"CmVeZdbhPzi5NprakhZ+p+jjbrI=\", false, function () {\n  return [usePages, useToken];\n});\n\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 87,\n  columnNumber: 5\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","UserContext","useToken","Login","usePages","App","pagesObj","pages","token","setToken","elements","setElements","getElements","result","console","log","key","hasOwnProperty","page","window","location","pathname","path","push","element","length","notfound","tokenLs","localStorage","getItem","userToken","JSON","parse","userId","map","elem","index","root","createRoot","document","getElementById","render"],"sources":["C:/Users/mmick/Documents/eget/songplacer/SongPlacer/frontend/src/index.js"],"sourcesContent":["import './index.css';\r\n\r\nimport {React, useState, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { UserContext } from \"./context\"\r\nimport useToken from './useToken';\r\nimport Login from './pages/handleUser/Login';\r\nimport usePages from './pages/usePages';\r\n\r\n\r\n/**\r\n * Has the Document root and routes defining what should be rendered\r\n * for each route. \r\n */\r\nexport default function App() {\r\n\r\n  //get object with pages info\r\n  const pagesObj = usePages();\r\n  const pages = pagesObj.pages;\r\n\r\n  \r\n  const { token, setToken } = useToken();\r\n  const [elements, setElements] = useState([]);\r\n\r\n\r\n  const getElements = () => {\r\n    const result = [];\r\n\r\n    console.log(\"getting elements\");\r\n\r\n    for (var key in pages) {\r\n\r\n      if (!pages.hasOwnProperty(key))  {\r\n        continue;\r\n      }\r\n      \r\n      var page = pages[key];      \r\n\r\n      // eslint-disable-next-line eqeqeq  \r\n      if (window.location.pathname == page.path || page.path === 'all') {\r\n        result.push(page.element);\r\n      }\r\n    }\r\n\r\n    //if only one element was found for route (Nav is always found): display 'Not found'-page     \r\n    if (result.length === 1) {\r\n      result.push(pages.notfound.element);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setElements(getElements());\r\n  }, []);\r\n\r\n\r\n  /* https://www.digitalocean.com/community/tutorials/how-to-add-login-authentication-to-react-applications */\r\n  if (!token) {\r\n    return <Login setToken={setToken}></Login>\r\n  } \r\n\r\n  const tokenLs = localStorage.getItem('token');\r\n  const userToken = JSON.parse(tokenLs)?.token;\r\n  const userId = userToken?.userId;\r\n\r\n \r\n  return (\r\n      <>\r\n      <UserContext.Provider value={{userId: userId}}>\r\n        {\r\n          elements.map((elem, index) => (\r\n            <div key={index}>\r\n              {elem}\r\n            </div>\r\n          ))\r\n        }\r\n\r\n      </UserContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(\r\n    <App />\r\n);"],"mappings":";;;AAAA,OAAO,aAAP;AAEA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAGA;AACA;AACA;AACA;;;;AACA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAAA;;EAE5B;EACA,MAAMC,QAAQ,GAAGF,QAAQ,EAAzB;EACA,MAAMG,KAAK,GAAGD,QAAQ,CAACC,KAAvB;EAGA,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBP,QAAQ,EAApC;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;;EAGA,MAAMc,WAAW,GAAG,MAAM;IACxB,MAAMC,MAAM,GAAG,EAAf;IAEAC,OAAO,CAACC,GAAR,CAAY,kBAAZ;;IAEA,KAAK,IAAIC,GAAT,IAAgBT,KAAhB,EAAuB;MAErB,IAAI,CAACA,KAAK,CAACU,cAAN,CAAqBD,GAArB,CAAL,EAAiC;QAC/B;MACD;;MAED,IAAIE,IAAI,GAAGX,KAAK,CAACS,GAAD,CAAhB,CANqB,CAQrB;;MACA,IAAIG,MAAM,CAACC,QAAP,CAAgBC,QAAhB,IAA4BH,IAAI,CAACI,IAAjC,IAAyCJ,IAAI,CAACI,IAAL,KAAc,KAA3D,EAAkE;QAChET,MAAM,CAACU,IAAP,CAAYL,IAAI,CAACM,OAAjB;MACD;IACF,CAjBuB,CAmBxB;;;IACA,IAAIX,MAAM,CAACY,MAAP,KAAkB,CAAtB,EAAyB;MACvBZ,MAAM,CAACU,IAAP,CAAYhB,KAAK,CAACmB,QAAN,CAAeF,OAA3B;IACD;;IAED,OAAOX,MAAP;EACD,CAzBD;;EA2BAd,SAAS,CAAC,MAAM;IACdY,WAAW,CAACC,WAAW,EAAZ,CAAX;EACD,CAFQ,EAEN,EAFM,CAAT;EAKA;;EACA,IAAI,CAACJ,KAAL,EAAY;IACV,oBAAO,QAAC,KAAD;MAAO,QAAQ,EAAEC;IAAjB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,MAAMkB,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhB;EACA,MAAMC,SAAS,kBAAGC,IAAI,CAACC,KAAL,CAAWL,OAAX,CAAH,gDAAG,YAAqBnB,KAAvC;EACA,MAAMyB,MAAM,GAAGH,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEG,MAA1B;EAGA,oBACI;IAAA,uBACA,QAAC,WAAD,CAAa,QAAb;MAAsB,KAAK,EAAE;QAACA,MAAM,EAAEA;MAAT,CAA7B;MAAA,UAEIvB,QAAQ,CAACwB,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACX;QAAA,UACGD;MADH,GAAUC,KAAV;QAAA;QAAA;QAAA;MAAA,QADF;IAFJ;MAAA;MAAA;MAAA;IAAA;EADA,iBADJ;AAcD;;GAnEuB/B,G;UAGLD,Q,EAIWF,Q;;;KAPNG,G;AAqExB,MAAMgC,IAAI,GAAGrC,QAAQ,CAACsC,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AAEAH,IAAI,CAACI,MAAL,eACI,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QADJ"},"metadata":{},"sourceType":"module"}