{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmick\\\\Documents\\\\eget\\\\songplacer\\\\SongPlacer\\\\frontend\\\\src\\\\pages\\\\library\\\\Library.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useContext } from 'react';\nimport { UserContext } from \"../../context\";\nimport usePages from '../usePages';\nimport Axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlus } from '@fortawesome/free-solid-svg-icons';\nimport Globals from '../../globals/Globals.css';\nimport ListedPlaylist from '../../components/common/ListedPlaylist';\n/**\r\n * @returns library of given owner\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Library = () => {\n  _s();\n\n  const userContext = useContext(UserContext);\n  const userId = userContext.userId;\n  const pagesHelp = usePages();\n  const pages = pagesHelp.pages;\n  const [playlists, setPlaylists] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  /**\r\n   * Fetches playlists after render \r\n   */\n\n  useEffect(() => {\n    //notice backticks ` \n    const getURL = `http://localhost:3001/library/${userId}`;\n    Axios.get(getURL).then(response => {\n      console.log(\"libr response: \" + JSON.stringify(response.data));\n      setPlaylists(response.data);\n    }).catch(err => console.log(\"get playlists error: \" + err));\n  }, []);\n  /**\r\n   * Might set loading to false (if data has been fetched), after render\r\n   */\n\n  useEffect(() => {\n    if (playlists !== null && playlists !== undefined) {\n      setLoading(false);\n    }\n  }, [playlists]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"library-outmost margin-top\",\n    children: [console.log(\"returning my library\"), isLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this) : playlists.map((playlist, index) => /*#__PURE__*/_jsxDEV(ListedPlaylist, {\n      playlist: playlist\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }, this)), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: pagesHelp.getURL(pages.addplaylist),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCirclePlus,\n        size: \"4x\",\n        className: \"icon add-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Library, \"GK/bcv7ibcyKZ9y75ik9O/IN81w=\", false, function () {\n  return [usePages];\n});\n\n_c = Library;\nexport default Library;\n\nvar _c;\n\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UserContext","usePages","Axios","FontAwesomeIcon","faCirclePlus","Globals","ListedPlaylist","Library","userContext","userId","pagesHelp","pages","playlists","setPlaylists","isLoading","setLoading","getURL","get","then","response","console","log","JSON","stringify","data","catch","err","undefined","map","playlist","index","addplaylist"],"sources":["C:/Users/mmick/Documents/eget/songplacer/SongPlacer/frontend/src/pages/library/Library.js"],"sourcesContent":["import { React, useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from \"../../context\";\r\nimport usePages from '../usePages';\r\nimport Axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCirclePlus } from '@fortawesome/free-solid-svg-icons'\r\nimport Globals from '../../globals/Globals.css';\r\nimport ListedPlaylist from '../../components/common/ListedPlaylist'\r\n\r\n/**\r\n * @returns library of given owner\r\n */\r\nconst Library = () => {\r\n\r\n    const userContext = useContext(UserContext);\r\n    const userId = userContext.userId;\r\n\r\n    const pagesHelp= usePages();\r\n    const pages = pagesHelp.pages;\r\n\r\n    const [playlists, setPlaylists] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    /**\r\n     * Fetches playlists after render \r\n     */\r\n     useEffect(()=> {\r\n\r\n        //notice backticks ` \r\n        const getURL = `http://localhost:3001/library/${userId}`;\r\n        \r\n        Axios.get(getURL).then((response) => {\r\n            console.log(\"libr response: \" + JSON.stringify(response.data));\r\n            setPlaylists(response.data);\r\n        }).catch((err) => console.log(\"get playlists error: \" + err));\r\n    }, []);\r\n\r\n    /**\r\n     * Might set loading to false (if data has been fetched), after render\r\n     */\r\n    useEffect(() => {\r\n        if (playlists !== null && playlists !== undefined) {\r\n        setLoading(false);\r\n    }\r\n    }, [playlists]);\r\n\r\n    return (\r\n        <div className='library-outmost margin-top'>\r\n            {console.log(\"returning my library\")}\r\n            {\r\n                isLoading ? \r\n                        <h2>Loading...</h2>\r\n                    :   \r\n                        playlists.map((playlist, index) => (\r\n                            <ListedPlaylist playlist={playlist} key={index}></ListedPlaylist>\r\n                        ))\r\n            }\r\n     \r\n                \r\n            <a href={pagesHelp.getURL(pages.addplaylist)}>\r\n                <FontAwesomeIcon icon={faCirclePlus} size='4x' className='icon add-button'/>\r\n            </a>\r\n              \r\n            \r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Library;"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AAEA;AACA;AACA;;;;AACA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAElB,MAAMC,WAAW,GAAGT,UAAU,CAACC,WAAD,CAA9B;EACA,MAAMS,MAAM,GAAGD,WAAW,CAACC,MAA3B;EAEA,MAAMC,SAAS,GAAET,QAAQ,EAAzB;EACA,MAAMU,KAAK,GAAGD,SAAS,CAACC,KAAxB;EAEA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACiB,SAAD,EAAYC,UAAZ,IAA0BlB,QAAQ,CAAC,IAAD,CAAxC;EAEA;AACJ;AACA;;EACKC,SAAS,CAAC,MAAK;IAEZ;IACA,MAAMkB,MAAM,GAAI,iCAAgCP,MAAO,EAAvD;IAEAP,KAAK,CAACe,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAwBC,QAAD,IAAc;MACjCC,OAAO,CAACC,GAAR,CAAY,oBAAoBC,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACK,IAAxB,CAAhC;MACAX,YAAY,CAACM,QAAQ,CAACK,IAAV,CAAZ;IACH,CAHD,EAGGC,KAHH,CAGUC,GAAD,IAASN,OAAO,CAACC,GAAR,CAAY,0BAA0BK,GAAtC,CAHlB;EAIH,CATS,EASP,EATO,CAAT;EAWD;AACJ;AACA;;EACI5B,SAAS,CAAC,MAAM;IACZ,IAAIc,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKe,SAAxC,EAAmD;MACnDZ,UAAU,CAAC,KAAD,CAAV;IACH;EACA,CAJQ,EAIN,CAACH,SAAD,CAJM,CAAT;EAMA,oBACI;IAAK,SAAS,EAAC,4BAAf;IAAA,WACKQ,OAAO,CAACC,GAAR,CAAY,sBAAZ,CADL,EAGQP,SAAS,gBACD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADC,GAGDF,SAAS,CAACgB,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,kBACV,QAAC,cAAD;MAAgB,QAAQ,EAAED;IAA1B,GAAyCC,KAAzC;MAAA;MAAA;MAAA;IAAA,QADJ,CANhB,eAYI;MAAG,IAAI,EAAEpB,SAAS,CAACM,MAAV,CAAiBL,KAAK,CAACoB,WAAvB,CAAT;MAAA,uBACI,QAAC,eAAD;QAAiB,IAAI,EAAE3B,YAAvB;QAAqC,IAAI,EAAC,IAA1C;QAA+C,SAAS,EAAC;MAAzD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH,CAvDD;;GAAMG,O;UAKeN,Q;;;KALfM,O;AAyDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}