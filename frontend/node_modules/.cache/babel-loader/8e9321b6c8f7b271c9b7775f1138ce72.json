{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmick\\\\Documents\\\\eget\\\\songplacer\\\\SongPlacer\\\\frontend\\\\src\\\\pages\\\\explore\\\\NearMe.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../../context';\nimport Axios from 'axios';\nimport Globals from '../../globals/Globals.css';\nimport ListedSongPlace from '../../components/common/ListedSongplace';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlay, faCirclePause } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SUCCESS = 0;\nconst FAIL = 1;\nconst LOADING = 2;\nconst UNKNOWN = 3;\nconst PLAYING = 4;\nconst PAUSED = 5;\nconst UNSUPPORTED = 6;\n\nconst NearMe = () => {\n  _s();\n\n  const userContext = useContext(UserContext);\n  const userId = userContext.userId; //used to make page render\n\n  const [updSwitch, setUpdSwitch] = useState(false); //used to store/set user position\n\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState(); //play, paused, or failed\n\n  const [play, setPlay] = useState(PAUSED); //the songplaces that are retrieved once\n\n  var songplaces = null; //the songplaces to display, sorted by proximity\n\n  const [displaySongplaces, setDisplaySongplaces] = useState([]);\n  /**\r\n   * Toggling play has the effect of making songplaces order by location \r\n   */\n\n  useEffect(() => {\n    console.log(\"useEffect of toggling play\");\n    autoPlay();\n  }, [play]);\n  /**\r\n   * Calculate distance between two points a and b of lat and long. \r\n   * Taken from: https://www.movable-type.co.uk/scripts/latlong.html\r\n   * @param aLat point a latitude\r\n   * @param aLong point a longitude\r\n   * @param bLat point b latitude\r\n   * @param bLong point b longitude\r\n   * @returns distance between given points\r\n   */\n\n  const calcDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3; // metres\n\n    const φ1 = lat1 * Math.PI / 180; // φ, λ in radians\n\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // in metres\n\n    return distance;\n  };\n  /**\r\n   * @returns a promise with songplaces\r\n   */\n\n\n  const getSongplaces = async () => {\n    return new Promise((res, rej) => {\n      if (songplaces != null) {\n        res(songplaces);\n      }\n\n      Axios.get(\"http://localhost:3001/get-songplaces\").then(response => {\n        if (response.status != 200) {\n          console.log(\"get songplaces failed, response: \" + response);\n          res(null);\n        }\n\n        songplaces = response.data;\n        res(response.data);\n      }).catch(err => {\n        res(null);\n      });\n    });\n  };\n  /**\r\n   * Gets users current position and then calls function to order songplaces by position\r\n   */\n\n\n  const getUserPosition = () => {\n    if (!navigator.geolocation) {\n      setPlay(UNSUPPORTED);\n      return new Promise();\n    }\n\n    navigator.geolocation.getCurrentPosition(orderByPosition, () => setPlay(FAIL));\n  };\n  /**\r\n   * Orders songplaces by proximity to given position \r\n   * @param position GeoLocationPosition (from navigator.geolocation.getCurrentPosition)\r\n   */\n\n\n  const orderByPosition = position => {\n    const lat = position.coords.latitude;\n    const long = position.coords.longitude;\n    setLat(lat);\n    setLong(long);\n    getSongplaces().then(sps => {\n      if (sps == null) {\n        setPlay(FAIL);\n        return;\n      }\n\n      console.log(\"all songplaces: \" + JSON.stringify(sps));\n      sps.sort(function (songplaceA, songplaceB) {\n        let aDistance = calcDistance(songplaceA.latitude, songplaceA.longitude, lat, long);\n        let bDistance = calcDistance(songplaceB.latitude, songplaceB.longitude, lat, long);\n        return aDistance - bDistance;\n      });\n      console.log(\"sorted songplaces: \" + JSON.stringify(sps));\n      setDisplaySongplaces(sps);\n    }).catch(err => console.log(\"order sps error\"));\n  };\n  /**\r\n   * Plays (sorts songplaces) while autoplay is on. \r\n   * \r\n   * Gets user position. \r\n   */\n\n\n  const autoPlay = () => {\n    console.log(\"ordering by current location\");\n\n    if (play === UNSUPPORTED || play === FAIL) {\n      console.log(\"cannot order\");\n      return;\n    }\n\n    getUserPosition(); //function calls function to order songplaces\n\n    if (PLAYING) {\n      setTimeout(autoPlay, 20000); //20 seconds\n    }\n  };\n\n  const toggleAutoPlay = () => {\n    if (play === PLAYING) {\n      setPlay(PAUSED);\n    } else {\n      setPlay(PLAYING);\n    }\n  };\n\n  if (play === UNSUPPORTED) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"margin-top\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Auto play not supported in browser :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (play === FAIL) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"margin-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Could not get music by location :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(false),\n        children: \"Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"margin-top\",\n    children: [play === PLAYING ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Playing music from: (  \", lat, \", \", long, \" )\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleAutoPlay(),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCirclePause,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Play local music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleAutoPlay(),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCirclePlay,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), displaySongplaces.map((songplace, index) => /*#__PURE__*/_jsxDEV(ListedSongPlace, {\n      songplace: songplace,\n      isOwned: false,\n      playlistId: -1\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NearMe, \"8RtoVmfjCwvQQSYxYaTdtINU+ss=\");\n\n_c = NearMe;\nexport default NearMe;\n\nvar _c;\n\n$RefreshReg$(_c, \"NearMe\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UserContext","Axios","Globals","ListedSongPlace","FontAwesomeIcon","faCirclePlay","faCirclePause","SUCCESS","FAIL","LOADING","UNKNOWN","PLAYING","PAUSED","UNSUPPORTED","NearMe","userContext","userId","updSwitch","setUpdSwitch","lat","setLat","long","setLong","play","setPlay","songplaces","displaySongplaces","setDisplaySongplaces","console","log","autoPlay","calcDistance","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","distance","getSongplaces","Promise","res","rej","get","then","response","status","data","catch","err","getUserPosition","navigator","geolocation","getCurrentPosition","orderByPosition","position","coords","latitude","longitude","sps","JSON","stringify","sort","songplaceA","songplaceB","aDistance","bDistance","setTimeout","toggleAutoPlay","window","location","reload","map","songplace","index"],"sources":["C:/Users/mmick/Documents/eget/songplacer/SongPlacer/frontend/src/pages/explore/NearMe.js"],"sourcesContent":["import {React, useState, useEffect, useContext} from 'react';\r\nimport { UserContext } from '../../context';\r\nimport Axios from 'axios';\r\nimport Globals from '../../globals/Globals.css';\r\nimport ListedSongPlace from '../../components/common/ListedSongplace';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCirclePlay, faCirclePause } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SUCCESS = 0;\r\nconst FAIL = 1;\r\nconst LOADING = 2;\r\nconst UNKNOWN = 3;\r\n\r\nconst PLAYING = 4;\r\nconst PAUSED = 5;\r\nconst UNSUPPORTED = 6;\r\n\r\n\r\n\r\nconst NearMe = () => {\r\n\r\n    const userContext = useContext(UserContext);\r\n    const userId = userContext.userId;\r\n\r\n    //used to make page render\r\n    const [updSwitch, setUpdSwitch] = useState(false);\r\n\r\n    //used to store/set user position\r\n    const [lat, setLat] = useState();\r\n    const [long, setLong] = useState();\r\n\r\n    //play, paused, or failed\r\n    const [play, setPlay] = useState(PAUSED);\r\n\r\n    //the songplaces that are retrieved once\r\n    var songplaces = null;\r\n\r\n    //the songplaces to display, sorted by proximity\r\n    const [displaySongplaces, setDisplaySongplaces] = useState([]);\r\n\r\n\r\n  \r\n\r\n    /**\r\n     * Toggling play has the effect of making songplaces order by location \r\n     */\r\n      useEffect(()=> {\r\n        console.log(\"useEffect of toggling play\")\r\n        autoPlay();\r\n    }, [play]);\r\n\r\n\r\n    \r\n    /**\r\n     * Calculate distance between two points a and b of lat and long. \r\n     * Taken from: https://www.movable-type.co.uk/scripts/latlong.html\r\n     * @param aLat point a latitude\r\n     * @param aLong point a longitude\r\n     * @param bLat point b latitude\r\n     * @param bLong point b longitude\r\n     * @returns distance between given points\r\n     */\r\n    const calcDistance = (lat1, lon1, lat2, lon2) => {\r\n\r\n        const R = 6371e3; // metres\r\n        const φ1 = lat1 * Math.PI/180; // φ, λ in radians\r\n        const φ2 = lat2 * Math.PI/180;\r\n        const Δφ = (lat2-lat1) * Math.PI/180;\r\n        const Δλ = (lon2-lon1) * Math.PI/180;\r\n\r\n        const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\r\n                Math.cos(φ1) * Math.cos(φ2) *\r\n                Math.sin(Δλ/2) * Math.sin(Δλ/2);\r\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n\r\n        const distance = R * c; // in metres\r\n\r\n        return distance;\r\n    }\r\n\r\n    /**\r\n     * @returns a promise with songplaces\r\n     */\r\n     const getSongplaces = async() => {\r\n        return new Promise((res, rej) => {\r\n            if (songplaces != null) {\r\n                res(songplaces);\r\n            }\r\n    \r\n            Axios.get(\"http://localhost:3001/get-songplaces\").then((response) => {\r\n                if (response.status != 200) {\r\n                    console.log(\"get songplaces failed, response: \" + response);\r\n                    res(null);\r\n                }   \r\n                songplaces = response.data;\r\n                res(response.data);\r\n            }).catch((err) => {\r\n                res(null);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets users current position and then calls function to order songplaces by position\r\n     */\r\n    const getUserPosition = () => {\r\n        if (!navigator.geolocation) {\r\n            setPlay(UNSUPPORTED);\r\n            return new Promise();\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(orderByPosition, () => setPlay(FAIL));\r\n    }\r\n\r\n\r\n    /**\r\n     * Orders songplaces by proximity to given position \r\n     * @param position GeoLocationPosition (from navigator.geolocation.getCurrentPosition)\r\n     */\r\n     const orderByPosition = (position) => {\r\n        const lat = position.coords.latitude;\r\n        const long = position.coords.longitude;\r\n\r\n        setLat(lat);\r\n        setLong(long);\r\n\r\n        getSongplaces().then((sps) => {\r\n            if (sps == null) {\r\n                setPlay(FAIL);\r\n                return;\r\n            }\r\n\r\n            console.log(\"all songplaces: \" + JSON.stringify(sps));\r\n            sps.sort(function(songplaceA, songplaceB) {\r\n                let aDistance = calcDistance(songplaceA.latitude, songplaceA.longitude, lat, long);\r\n                let bDistance = calcDistance(songplaceB.latitude, songplaceB.longitude, lat, long);\r\n    \r\n                return aDistance - bDistance;\r\n            });\r\n            console.log(\"sorted songplaces: \" + JSON.stringify(sps));\r\n            setDisplaySongplaces(sps);\r\n        }).catch((err) => console.log(\"order sps error\"));\r\n    }\r\n\r\n    /**\r\n     * Plays (sorts songplaces) while autoplay is on. \r\n     * \r\n     * Gets user position. \r\n     */\r\n    const autoPlay = () => {\r\n        console.log(\"ordering by current location\");\r\n        if (play === UNSUPPORTED || play === FAIL) {\r\n            console.log(\"cannot order\")\r\n            return;\r\n        }\r\n\r\n        getUserPosition();  //function calls function to order songplaces\r\n        \r\n        if (PLAYING) {\r\n            setTimeout(autoPlay, 20000);  //20 seconds\r\n        }\r\n    }\r\n\r\n    const toggleAutoPlay = () => {\r\n        if (play === PLAYING) {\r\n            setPlay(PAUSED);\r\n        } else {\r\n            setPlay(PLAYING);\r\n        }\r\n    }\r\n\r\n\r\n    if (play === UNSUPPORTED) {\r\n        return (\r\n            <div className=\"margin-top\">\r\n                <h2>Auto play not supported in browser :(</h2>\r\n            </div>\r\n        )\r\n    } \r\n\r\n    if (play === FAIL) {\r\n        return (\r\n            <div className=\"margin-top\">\r\n                <h2>Could not get music by location :(</h2>\r\n                <button onClick={() => window.location.reload(false)}>Try again</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"margin-top\">\r\n            {\r\n                play === PLAYING ? \r\n                        <div>\r\n                            <h5>Playing music from: (  {lat}, {long} )</h5>\r\n                            <button onClick={() => toggleAutoPlay()}>\r\n                                <FontAwesomeIcon icon={faCirclePause} size='2x'/>\r\n                            </button>\r\n               \r\n                            \r\n            \r\n                        </div>\r\n                    :\r\n                        <div>\r\n                            <h5>Play local music</h5>\r\n                            <button onClick={() => toggleAutoPlay()}>\r\n                                <FontAwesomeIcon icon={faCirclePlay} size='2x'/>\r\n                            </button>\r\n                        </div>\r\n                    \r\n            }\r\n            <hr/>\r\n             {\r\n                displaySongplaces.map((songplace, index) => (\r\n                    <ListedSongPlace songplace={songplace} key={index} isOwned={false} playlistId={-1}/>\r\n                ))\r\n             }         \r\n        </div>\r\n    )\r\n    \r\n\r\n    \r\n}\r\n\r\nexport default NearMe;"],"mappings":"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"},"metadata":{},"sourceType":"module"}