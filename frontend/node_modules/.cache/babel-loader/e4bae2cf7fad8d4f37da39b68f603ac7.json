{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmick\\\\Documents\\\\eget\\\\songplacer\\\\SongPlacer\\\\frontend\\\\src\\\\pages\\\\usePages.js\";\nimport Library from './library/Library';\nimport PlaylistCreate from './library/PlaylistCreate';\nimport Playlist from './library/Playlist';\nimport SongPlaceCreate from './library/SongplaceCreate';\nimport Logout from './handleUser/Logout';\nimport SearchUser from './explore/SearchUser';\nimport NoPage from './NoPage';\nimport Nav from '../components/navigation/Nav';\nimport { useState } from 'react';\nimport NearMe from './explore/NearMe';\n/**\r\n * Knows urls and associated elements.\r\n * Has functionality to get name (to display in navbar for example) for a route, \r\n * URL or URLSearchParams for route.  \r\n *  \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function usePages() {\n  const urlBeginning = 'http://localhost:3000';\n  const pages = {\n    navbar: {\n      path: 'all',\n      element: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 22\n      }, this)\n    },\n    myLibrary: {\n      path: '/library',\n      name: 'My library',\n      element: /*#__PURE__*/_jsxDEV(Library, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }, this)\n    },\n    library: {\n      path: '/library',\n      name: 'Library of some user wihu',\n      element: /*#__PURE__*/_jsxDEV(Library, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }, this)\n    },\n    addsongplace: {\n      path: '/library/add-songplace',\n      name: 'Add a songplace',\n      element: /*#__PURE__*/_jsxDEV(SongPlaceCreate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this)\n    },\n    addplaylist: {\n      path: 'library/add-playlist',\n      urlEnding: '/create-playlist',\n      name: 'Add a playlist',\n      element: /*#__PURE__*/_jsxDEV(PlaylistCreate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this)\n    },\n    specificplaylist: {\n      path: '/library/playlist-view',\n      name: 'Playlist',\n      element: /*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 22\n      }, this)\n    },\n    logout: {\n      path: '/logout-user',\n      name: 'Logout',\n      element: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }, this)\n    },\n    nearme: {\n      path: '/near-me',\n      name: 'Near me',\n      element: /*#__PURE__*/_jsxDEV(NearMe, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }, this)\n    },\n    searchUser: {\n      path: 'search-user',\n      name: 'Search for user',\n      element: /*#__PURE__*/_jsxDEV(SearchUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 22\n      }, this)\n    },\n    notfound: {\n      name: 'Page not found',\n      element: /*#__PURE__*/_jsxDEV(NoPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }, this)\n    }\n  };\n\n  const getURLSearchParams = key => {};\n\n  const getURL = key => {};\n  /**\r\n   * Return name for current location\r\n   * \r\n   * @param pathName last part of location, like for example: '/library' \r\n   */\n\n\n  const getName = pathName => {\n    for (var key in pages) {\n      if (pages[key].path === pathName) {\n        return pages[key].name;\n      }\n    }\n\n    console.log(\"could not associated name for path: \" + pathName);\n  };\n\n  return {\n    pages,\n    getURL,\n    getURLSearchParams,\n    getName\n  };\n}","map":{"version":3,"names":["Library","PlaylistCreate","Playlist","SongPlaceCreate","Logout","SearchUser","NoPage","Nav","useState","NearMe","usePages","urlBeginning","pages","navbar","path","element","myLibrary","name","library","addsongplace","addplaylist","urlEnding","specificplaylist","logout","nearme","searchUser","notfound","getURLSearchParams","key","getURL","getName","pathName","console","log"],"sources":["C:/Users/mmick/Documents/eget/songplacer/SongPlacer/frontend/src/pages/usePages.js"],"sourcesContent":["import Library from './library/Library';\r\nimport PlaylistCreate from './library/PlaylistCreate';\r\nimport Playlist from './library/Playlist';\r\nimport SongPlaceCreate from './library/SongplaceCreate';\r\nimport Logout from './handleUser/Logout';\r\nimport SearchUser from './explore/SearchUser';\r\nimport NoPage from './NoPage';\r\nimport Nav from '../components/navigation/Nav';\r\n\r\nimport { useState } from 'react';\r\nimport NearMe from './explore/NearMe';\r\n\r\n\r\n/**\r\n * Knows urls and associated elements.\r\n * Has functionality to get name (to display in navbar for example) for a route, \r\n * URL or URLSearchParams for route.  \r\n *  \r\n */\r\nexport default function usePages() {\r\n\r\n\r\n    const urlBeginning = 'http://localhost:3000';\r\n\r\n    \r\n    const pages = {\r\n        navbar: {\r\n            path: 'all',\r\n            element: <Nav/>\r\n        },\r\n        myLibrary: {\r\n            path: '/library',\r\n            name: 'My library',\r\n            element: <Library/>\r\n        },\r\n        library: {\r\n            path: '/library',\r\n            name: 'Library of some user wihu',\r\n            element: <Library/>\r\n        },\r\n        addsongplace: {\r\n            path: '/library/add-songplace',\r\n            name: 'Add a songplace', \r\n            element: <SongPlaceCreate/>\r\n        }, \r\n        addplaylist: {\r\n            path: 'library/add-playlist',  \r\n            urlEnding: '/create-playlist', \r\n            name: 'Add a playlist', \r\n            element: <PlaylistCreate/>\r\n        }, \r\n        specificplaylist: {\r\n            path: '/library/playlist-view',\r\n            name: 'Playlist', \r\n            element: <Playlist/>\r\n        },\r\n        logout: {\r\n            path: '/logout-user', \r\n            name: 'Logout', \r\n            element: <Logout/>\r\n        },\r\n        nearme: {\r\n            path: '/near-me', \r\n            name: 'Near me', \r\n            element: <NearMe/>\r\n        },\r\n        searchUser: {\r\n            path: 'search-user', \r\n            name: 'Search for user', \r\n            element: <SearchUser/>\r\n        },\r\n        notfound: {\r\n            name: 'Page not found', \r\n            element: <NoPage/>\r\n        }\r\n    }\r\n\r\n    const getURLSearchParams = (key) => {\r\n\r\n    }\r\n\r\n    const getURL = (key) => {\r\n       \r\n    }\r\n\r\n    /**\r\n     * Return name for current location\r\n     * \r\n     * @param pathName last part of location, like for example: '/library' \r\n     */\r\n    const getName = (pathName) => {\r\n        for (var key in pages) {\r\n            if (pages[key].path === pathName) {\r\n                return pages[key].name;\r\n            }\r\n        }\r\n\r\n        console.log(\"could not associated name for path: \" + pathName);\r\n    }\r\n\r\n    return {\r\n        pages, \r\n        getURL, \r\n        getURLSearchParams,\r\n        getName\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,mBAApB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,QAAT,GAAoB;EAG/B,MAAMC,YAAY,GAAG,uBAArB;EAGA,MAAMC,KAAK,GAAG;IACVC,MAAM,EAAE;MACJC,IAAI,EAAE,KADF;MAEJC,OAAO,eAAE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA;IAFL,CADE;IAKVC,SAAS,EAAE;MACPF,IAAI,EAAE,UADC;MAEPG,IAAI,EAAE,YAFC;MAGPF,OAAO,eAAE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA;IAHF,CALD;IAUVG,OAAO,EAAE;MACLJ,IAAI,EAAE,UADD;MAELG,IAAI,EAAE,2BAFD;MAGLF,OAAO,eAAE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA;IAHJ,CAVC;IAeVI,YAAY,EAAE;MACVL,IAAI,EAAE,wBADI;MAEVG,IAAI,EAAE,iBAFI;MAGVF,OAAO,eAAE,QAAC,eAAD;QAAA;QAAA;QAAA;MAAA;IAHC,CAfJ;IAoBVK,WAAW,EAAE;MACTN,IAAI,EAAE,sBADG;MAETO,SAAS,EAAE,kBAFF;MAGTJ,IAAI,EAAE,gBAHG;MAITF,OAAO,eAAE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IAJA,CApBH;IA0BVO,gBAAgB,EAAE;MACdR,IAAI,EAAE,wBADQ;MAEdG,IAAI,EAAE,UAFQ;MAGdF,OAAO,eAAE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IAHK,CA1BR;IA+BVQ,MAAM,EAAE;MACJT,IAAI,EAAE,cADF;MAEJG,IAAI,EAAE,QAFF;MAGJF,OAAO,eAAE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA;IAHL,CA/BE;IAoCVS,MAAM,EAAE;MACJV,IAAI,EAAE,UADF;MAEJG,IAAI,EAAE,SAFF;MAGJF,OAAO,eAAE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA;IAHL,CApCE;IAyCVU,UAAU,EAAE;MACRX,IAAI,EAAE,aADE;MAERG,IAAI,EAAE,iBAFE;MAGRF,OAAO,eAAE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA;IAHD,CAzCF;IA8CVW,QAAQ,EAAE;MACNT,IAAI,EAAE,gBADA;MAENF,OAAO,eAAE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA;IAFH;EA9CA,CAAd;;EAoDA,MAAMY,kBAAkB,GAAIC,GAAD,IAAS,CAEnC,CAFD;;EAIA,MAAMC,MAAM,GAAID,GAAD,IAAS,CAEvB,CAFD;EAIA;AACJ;AACA;AACA;AACA;;;EACI,MAAME,OAAO,GAAIC,QAAD,IAAc;IAC1B,KAAK,IAAIH,GAAT,IAAgBhB,KAAhB,EAAuB;MACnB,IAAIA,KAAK,CAACgB,GAAD,CAAL,CAAWd,IAAX,KAAoBiB,QAAxB,EAAkC;QAC9B,OAAOnB,KAAK,CAACgB,GAAD,CAAL,CAAWX,IAAlB;MACH;IACJ;;IAEDe,OAAO,CAACC,GAAR,CAAY,yCAAyCF,QAArD;EACH,CARD;;EAUA,OAAO;IACHnB,KADG;IAEHiB,MAFG;IAGHF,kBAHG;IAIHG;EAJG,CAAP;AAMH"},"metadata":{},"sourceType":"module"}