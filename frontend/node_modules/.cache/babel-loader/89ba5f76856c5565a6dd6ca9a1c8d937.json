{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmick\\\\Documents\\\\eget\\\\songplacer\\\\SongPlacer\\\\frontend\\\\src\\\\pages\\\\explore\\\\NearMe.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../../context';\nimport Axios from 'axios';\nimport Globals from '../../globals/Globals.css';\nimport ListedSongPlace from '../../components/common/ListedSongplace';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlay, faCirclePause } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SUCCESS = 0;\nconst FAIL = 1;\nconst LOADING = 2;\nconst UNKNOWN = 3;\nconst PLAYING = 4;\nconst PAUSED = 5;\nconst UNSUPPORTED = 6;\n\nconst NearMe = () => {\n  _s();\n\n  const userContext = useContext(UserContext);\n  const userId = userContext.userId; //used to make page render\n\n  const [updSwitch, setUpdSwitch] = useState(false); //used to store/set user position\n\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState(); //get songplaces status\n\n  const [retrieveStatus, setRetrieveStatus] = useState(UNKNOWN); //play, paused, or failed\n\n  const [play, setPlay] = useState(PAUSED); //the songplaces that are retrieved once\n\n  var songplaces = null; //the songplaces to display, sorted by proximity\n\n  const [displaySongplaces, setDisplaySongplaces] = useState([]);\n\n  const getUserPosition = () => {\n    if (!navigator.geolocation) {\n      setPlay(UNSUPPORTED);\n      return new Promise();\n    } // Simple wrapper\n\n\n    return new Promise((res, rej) => {\n      navigator.geolocation.getCurrentPosition(res, rej);\n    });\n  };\n  /**\r\n  * Fetches songplaces after render \r\n  */\n\n\n  useEffect(() => {\n    console.log(\"useEffect of toggling play\");\n    orderByCurrentLocation();\n  }, [play]);\n  /**\r\n   * @returns a promise with songplaces\r\n   */\n\n  const getSongplaces = async () => {\n    return new Promise((res, rej) => {\n      if (songplaces != null) {\n        res(songplaces);\n      }\n\n      Axios.get(\"http://localhost:3001/get-songplaces\").then(response => {\n        if (response.status != 200) {\n          console.log(\"get songplaces failed, response: \" + response);\n          res(null);\n        }\n\n        songplaces = response.data;\n        res(response.data);\n      }).catch(err => {\n        res(null);\n      });\n    });\n  };\n  /**\r\n   * Calculate distance between two points a and b of lat and long. \r\n   * Taken from: https://www.movable-type.co.uk/scripts/latlong.html\r\n   * @param aLat point a latitude\r\n   * @param aLong point a longitude\r\n   * @param bLat point b latitude\r\n   * @param bLong point b longitude\r\n   * @returns distance between given points\r\n   */\n\n\n  const calcDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3; // metres\n\n    const φ1 = lat1 * Math.PI / 180; // φ, λ in radians\n\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // in metres\n\n    return distance;\n  };\n  /**\r\n   * Orders songplaces by proximity to given position \r\n   */\n\n\n  const orderDisplaySongplaces = async position => {\n    if (position == null) {\n      console.log(\"cannot order because: position is null\");\n      return;\n    }\n\n    if (!retrieveStatus === SUCCESS) {\n      console.log(\"cannot ordered because: songplaces not retrieved\");\n      return;\n    }\n\n    getSongplaces().then(sps => {\n      sps.sort(function (songplaceA, songplaceB) {\n        let aDistance = calcDistance(songplaceA.latitude, songplaceA.longitude, lat, long);\n        let bDistance = calcDistance(songplaceB.latitude, songplaceB.longitude, lat, long);\n        return aDistance - bDistance;\n      });\n      setDisplaySongplaces(sps);\n    });\n  };\n  /**\r\n   * Gets user position and orders songplaces by proximity. \r\n   * If auto play on, keeps doing so every 20seconds. \r\n   */\n\n\n  const orderByCurrentLocation = () => {\n    console.log(\"ordering by current location\");\n\n    if (play === UNSUPPORTED || play === FAIL) {\n      console.log(\"cannot order\");\n      return;\n    }\n\n    getUserPosition().then(pos => {\n      orderByNearest(pos);\n    });\n\n    if (PLAYING) {\n      setTimeout(orderByCurrentLocation, 5000); //20 seconds\n    }\n  };\n\n  const toggleAutoPlay = () => {\n    if (play === PLAYING) {\n      setPlay(PAUSED);\n    } else {\n      setPlay(PLAYING);\n    }\n  };\n\n  if (play === UNSUPPORTED) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"margin-top\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Auto play not supported in browser :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (play === FAIL || retrieveStatus === FAIL) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"margin-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Could not get music by location :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(false),\n        children: \"Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"margin-top\",\n    children: [play === PLAYING ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Playing music from: (  \", lat, \", \", long, \" )\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleAutoPlay(),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCirclePause,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Play local music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleAutoPlay(),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCirclePlay,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), retrieveStatus === LOADING ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), //return songplaces if they are retrieved\n    retrieveStatus === SUCCESS ? songplaces.map((songplace, index) => /*#__PURE__*/_jsxDEV(ListedSongPlace, {\n      songplace: songplace,\n      isOwned: false,\n      playlistId: -1\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NearMe, \"WFV0Q99IM584Nfx06TM2GutfFus=\");\n\n_c = NearMe;\nexport default NearMe;\n\nvar _c;\n\n$RefreshReg$(_c, \"NearMe\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UserContext","Axios","Globals","ListedSongPlace","FontAwesomeIcon","faCirclePlay","faCirclePause","SUCCESS","FAIL","LOADING","UNKNOWN","PLAYING","PAUSED","UNSUPPORTED","NearMe","userContext","userId","updSwitch","setUpdSwitch","lat","setLat","long","setLong","retrieveStatus","setRetrieveStatus","play","setPlay","songplaces","displaySongplaces","setDisplaySongplaces","getUserPosition","navigator","geolocation","Promise","res","rej","getCurrentPosition","console","log","orderByCurrentLocation","getSongplaces","get","then","response","status","data","catch","err","calcDistance","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","distance","orderDisplaySongplaces","position","sps","sort","songplaceA","songplaceB","aDistance","latitude","longitude","bDistance","pos","orderByNearest","setTimeout","toggleAutoPlay","window","location","reload","map","songplace","index"],"sources":["C:/Users/mmick/Documents/eget/songplacer/SongPlacer/frontend/src/pages/explore/NearMe.js"],"sourcesContent":["import {React, useState, useEffect, useContext} from 'react';\r\nimport { UserContext } from '../../context';\r\nimport Axios from 'axios';\r\nimport Globals from '../../globals/Globals.css';\r\nimport ListedSongPlace from '../../components/common/ListedSongplace';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCirclePlay, faCirclePause } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SUCCESS = 0;\r\nconst FAIL = 1;\r\nconst LOADING = 2;\r\nconst UNKNOWN = 3;\r\n\r\nconst PLAYING = 4;\r\nconst PAUSED = 5;\r\nconst UNSUPPORTED = 6;\r\n\r\n\r\n\r\nconst NearMe = () => {\r\n\r\n    const userContext = useContext(UserContext);\r\n    const userId = userContext.userId;\r\n\r\n    //used to make page render\r\n    const [updSwitch, setUpdSwitch] = useState(false);\r\n\r\n    //used to store/set user position\r\n    const [lat, setLat] = useState();\r\n    const [long, setLong] = useState();\r\n\r\n    //get songplaces status\r\n    const [retrieveStatus, setRetrieveStatus] = useState(UNKNOWN);\r\n\r\n    //play, paused, or failed\r\n    const [play, setPlay] = useState(PAUSED);\r\n\r\n    //the songplaces that are retrieved once\r\n    var songplaces = null;\r\n\r\n    //the songplaces to display, sorted by proximity\r\n    const [displaySongplaces, setDisplaySongplaces] = useState([]);\r\n\r\n\r\n    const getUserPosition = () => {\r\n        if (!navigator.geolocation) {\r\n            setPlay(UNSUPPORTED);\r\n            return new Promise();\r\n        }\r\n        \r\n        // Simple wrapper\r\n        return new Promise((res, rej) => {\r\n            navigator.geolocation.getCurrentPosition(res, rej);\r\n        });\r\n    }\r\n\r\n     /**\r\n     * Fetches songplaces after render \r\n     */\r\n      useEffect(()=> {\r\n        console.log(\"useEffect of toggling play\")\r\n        orderByCurrentLocation();\r\n    }, [play]);\r\n\r\n\r\n    /**\r\n     * @returns a promise with songplaces\r\n     */\r\n    const getSongplaces = async() => {\r\n        return new Promise((res, rej) => {\r\n            if (songplaces != null) {\r\n                res(songplaces);\r\n            }\r\n    \r\n            Axios.get(\"http://localhost:3001/get-songplaces\").then((response) => {\r\n                if (response.status != 200) {\r\n                    console.log(\"get songplaces failed, response: \" + response);\r\n                    res(null);\r\n                }   \r\n                songplaces = response.data;\r\n                res(response.data);\r\n            }).catch((err) => {\r\n                res(null);\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Calculate distance between two points a and b of lat and long. \r\n     * Taken from: https://www.movable-type.co.uk/scripts/latlong.html\r\n     * @param aLat point a latitude\r\n     * @param aLong point a longitude\r\n     * @param bLat point b latitude\r\n     * @param bLong point b longitude\r\n     * @returns distance between given points\r\n     */\r\n    const calcDistance = (lat1, lon1, lat2, lon2) => {\r\n\r\n        const R = 6371e3; // metres\r\n        const φ1 = lat1 * Math.PI/180; // φ, λ in radians\r\n        const φ2 = lat2 * Math.PI/180;\r\n        const Δφ = (lat2-lat1) * Math.PI/180;\r\n        const Δλ = (lon2-lon1) * Math.PI/180;\r\n\r\n        const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\r\n                Math.cos(φ1) * Math.cos(φ2) *\r\n                Math.sin(Δλ/2) * Math.sin(Δλ/2);\r\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n\r\n        const distance = R * c; // in metres\r\n\r\n        return distance;\r\n    }\r\n\r\n\r\n    /**\r\n     * Orders songplaces by proximity to given position \r\n     */\r\n     const orderDisplaySongplaces = async(position) => {\r\n        if (position == null) {\r\n            console.log(\"cannot order because: position is null\");\r\n            return;\r\n        }\r\n\r\n        if (!retrieveStatus === SUCCESS) {\r\n            console.log(\"cannot ordered because: songplaces not retrieved\");\r\n            return;\r\n        }\r\n\r\n        getSongplaces().then((sps) => {\r\n            sps.sort(function(songplaceA, songplaceB) {\r\n                let aDistance = calcDistance(songplaceA.latitude, songplaceA.longitude, lat, long);\r\n                let bDistance = calcDistance(songplaceB.latitude, songplaceB.longitude, lat, long);\r\n    \r\n                return aDistance - bDistance;\r\n            });\r\n            setDisplaySongplaces(sps);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets user position and orders songplaces by proximity. \r\n     * If auto play on, keeps doing so every 20seconds. \r\n     */\r\n    const orderByCurrentLocation = () => {\r\n        console.log(\"ordering by current location\");\r\n        if (play === UNSUPPORTED || play === FAIL) {\r\n            console.log(\"cannot order\")\r\n            return;\r\n        }\r\n\r\n        getUserPosition().then((pos) => {\r\n            orderByNearest(pos);\r\n        });\r\n        \r\n        if (PLAYING) {\r\n            setTimeout(orderByCurrentLocation, 5000);  //20 seconds\r\n        }\r\n    }\r\n\r\n    const toggleAutoPlay = () => {\r\n        if (play === PLAYING) {\r\n            setPlay(PAUSED);\r\n        } else {\r\n            setPlay(PLAYING);\r\n        }\r\n    }\r\n\r\n    if (play === UNSUPPORTED) {\r\n        return (\r\n            <div className=\"margin-top\">\r\n                <h2>Auto play not supported in browser :(</h2>\r\n            </div>\r\n        )\r\n    } \r\n\r\n    if (play === FAIL || retrieveStatus === FAIL) {\r\n        return (\r\n            <div className=\"margin-top\">\r\n                <h2>Could not get music by location :(</h2>\r\n                <button onClick={() => window.location.reload(false)}>Try again</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"margin-top\">\r\n            {\r\n                play === PLAYING ? \r\n                        <div>\r\n                            <h5>Playing music from: (  {lat}, {long} )</h5>\r\n                            <button onClick={() => toggleAutoPlay()}>\r\n                                <FontAwesomeIcon icon={faCirclePause} size='2x'/>\r\n                            </button>\r\n                        </div>\r\n                    :\r\n                        <div>\r\n                            <h5>Play local music</h5>\r\n                            <button onClick={() => toggleAutoPlay()}>\r\n                                <FontAwesomeIcon icon={faCirclePlay} size='2x'/>\r\n                            </button>\r\n                        </div>\r\n                    \r\n            }\r\n            <hr/>\r\n            {\r\n                retrieveStatus === LOADING ? \r\n                        <h2>Loading...</h2>\r\n                    :\r\n                        <></>\r\n            }\r\n            {\r\n                //return songplaces if they are retrieved\r\n                retrieveStatus === SUCCESS ? \r\n                    songplaces.map((songplace, index) => (\r\n                        <ListedSongPlace songplace={songplace} key={index} isOwned={false} playlistId={-1}/>\r\n                    ))\r\n                :\r\n                    <></>\r\n            }           \r\n        </div>\r\n    )\r\n    \r\n\r\n    \r\n}\r\n\r\nexport default NearMe;"],"mappings":"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"},"metadata":{},"sourceType":"module"}