{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmick\\\\Documents\\\\eget\\\\songplacer\\\\SongPlacer\\\\frontend\\\\src\\\\components\\\\common\\\\ListedPlaylist.js\",\n    _s = $RefreshSig$();\n\nimport usePages from \"../../pages/usePages\";\nimport { useSearchParams } from \"react-router-dom\";\n/**\r\n * @param {*} playlist object\r\n * @returns item to represent a playlist in a list\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListedSongPlace = props => {\n  _s();\n\n  const playlist = props.playlist;\n  const playlistId = playlist.id;\n  const userId = playlist.user_id;\n  const pagesHelp = usePages();\n  const pages = pagesHelp.pages;\n\n  const openPlaylist = () => {\n    let url = pagesHelp.getURL(pages.specificplaylist);\n    url.searchParams.set('playlist-id', playlistId);\n    console.log(\"playlist \" + playlist.name + \" userId = \" + playlist.user_id); //window.location.href = url;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: () => openPlaylist(),\n      children: playlist.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListedSongPlace, \"eehRGbJVwWRUpnPVBC6VYUPMwQI=\", false, function () {\n  return [usePages];\n});\n\n_c = ListedSongPlace;\nexport default ListedSongPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListedSongPlace\");","map":{"version":3,"names":["usePages","useSearchParams","ListedSongPlace","props","playlist","playlistId","id","userId","user_id","pagesHelp","pages","openPlaylist","url","getURL","specificplaylist","searchParams","set","console","log","name"],"sources":["C:/Users/mmick/Documents/eget/songplacer/SongPlacer/frontend/src/components/common/ListedPlaylist.js"],"sourcesContent":["import usePages from \"../../pages/usePages\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\n/**\r\n * @param {*} playlist object\r\n * @returns item to represent a playlist in a list\r\n */\r\n const ListedSongPlace = (props) => {\r\n\r\n    const playlist = props.playlist;\r\n    const playlistId = playlist.id;\r\n    const userId = playlist.user_id;\r\n\r\n    const pagesHelp = usePages();\r\n    const pages = pagesHelp.pages;\r\n    \r\n\r\n    const openPlaylist = () => {\r\n        let url = pagesHelp.getURL(pages.specificplaylist);\r\n        url.searchParams.set('playlist-id', playlistId);\r\n        console.log(\"playlist \" + playlist.name + \" userId = \" + playlist.user_id);\r\n        //window.location.href = url;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h2 onClick={() => openPlaylist()}>\r\n                {playlist.name}\r\n            </h2>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListedSongPlace;"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA;AACA;AACA;AACA;;;;AACC,MAAMC,eAAe,GAAIC,KAAD,IAAW;EAAA;;EAEhC,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;EACA,MAAMC,UAAU,GAAGD,QAAQ,CAACE,EAA5B;EACA,MAAMC,MAAM,GAAGH,QAAQ,CAACI,OAAxB;EAEA,MAAMC,SAAS,GAAGT,QAAQ,EAA1B;EACA,MAAMU,KAAK,GAAGD,SAAS,CAACC,KAAxB;;EAGA,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAIC,GAAG,GAAGH,SAAS,CAACI,MAAV,CAAiBH,KAAK,CAACI,gBAAvB,CAAV;IACAF,GAAG,CAACG,YAAJ,CAAiBC,GAAjB,CAAqB,aAArB,EAAoCX,UAApC;IACAY,OAAO,CAACC,GAAR,CAAY,cAAcd,QAAQ,CAACe,IAAvB,GAA8B,YAA9B,GAA6Cf,QAAQ,CAACI,OAAlE,EAHuB,CAIvB;EACH,CALD;;EAOA,oBACI;IAAA,wBACI;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAI,OAAO,EAAE,MAAMG,YAAY,EAA/B;MAAA,UACKP,QAAQ,CAACe;IADd;MAAA;MAAA;MAAA;IAAA,QAFJ,eAKI;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CA1BA;;GAAMjB,e;UAMeF,Q;;;KANfE,e;AA4BP,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}