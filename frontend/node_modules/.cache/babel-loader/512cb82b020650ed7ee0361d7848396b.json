{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmick\\\\Documents\\\\eget\\\\songplacer\\\\SongPlacer\\\\frontend\\\\src\\\\pages\\\\explore\\\\NearMe.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../../context';\nimport Axios from 'axios';\nimport Globals from '../../globals/Globals.css';\nimport ListedSongPlace from '../../components/common/ListedSongplace';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SUCCESS = 0;\nconst FAIL = 1;\nconst LOADING = 2;\nconst UNKNOWN = 3;\n\nconst NearMe = () => {\n  _s();\n\n  const userContext = useContext(UserContext);\n  const userId = userContext.userId; //used to store/set songplaces \n\n  const [songplaces, setSongplaces] = useState(); //used to store/set songplaces ordered by proximity\n\n  const [sorted, setSorted] = useState(false); //used to store/set user position\n\n  const [lat, setLat] = useState();\n  const [long, setLong] = useState();\n  const [retrieveStatus, setRetrieveStatus] = useState(UNKNOWN);\n  /**\r\n   * Fetches songplaces after render \r\n   */\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/get-songplaces\").then(response => {\n      if (response.status != 200) {\n        console.log(\"get songplaces response: \" + response);\n        setRetrieveStatus(FAIL);\n        return;\n      }\n\n      setSongplaces(response.data);\n      setRetrieveStatus(SUCCESS);\n    }).catch(err => {\n      console.log(\"get songplaces error\");\n      setRetrieveStatus(FAIL);\n    });\n  }, []);\n  /**\r\n   * Calculate distance between two points a and b of lat and long. \r\n   * Taken fromn: https://www.movable-type.co.uk/scripts/latlong.html\r\n   * @param aLat point a latitude\r\n   * @param aLong point a longitude\r\n   * @param bLat point b latitude\r\n   * @param bLong point b longitude\r\n   * @returns distance between given points\r\n   */\n\n  const calcDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3; // metres\n\n    const φ1 = lat1 * Math.PI / 180; // φ, λ in radians\n\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // in metres\n\n    console.log(\"distance: \" + distance);\n    return distance;\n  };\n  /**\r\n   * Orders songplaces by proximity to given position and sets the variable: 'nearest'. \r\n   */\n\n\n  const orderByNearest = e => {\n    //reset if songplaces already sorted\n    if (sorted) {\n      window.location.reload(true);\n    }\n\n    e.preventDefault(); //in order not to reload page\n\n    if (lat == null || long == null) {\n      return;\n    }\n\n    if (songplaces == null) {\n      setRetrieveStatus(FAIL);\n      return;\n    }\n\n    songplaces.sort(function (songplaceA, songplaceB) {\n      let aDistance = calcDistance(songplaceA.latitude, songplaceA.longitude, lat, long);\n      let bDistance = calcDistance(songplaceB.latitude, songplaceB.longitude, lat, long);\n      return aDistance - bDistance;\n    });\n    setSorted(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"margin-top\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => orderByNearest(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Latitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"number\",\n          min: \"-90\",\n          max: \"90\",\n          step: \"0.01\",\n          onChange: e => setLat(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Longitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"number\",\n          min: \"-180\",\n          max: \"180\",\n          step: \"0.01\",\n          onChange: e => setLong(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), sorted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Get nearest music\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), retrieveStatus === LOADING ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), retrieveStatus === FAIL ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Could not get songplaces\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), //return songplaces if they are retrieved and sorted\n    retrieveStatus === SUCCESS && sorted ? songplaces.map((songplace, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ListedSongPlace, {\n        songplace: songplace,\n        isOwned: false,\n        playlistId: -1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NearMe, \"pwOSc4a5YIp9iOV4LqqnQNtviv4=\");\n\n_c = NearMe;\nexport default NearMe;\n\nvar _c;\n\n$RefreshReg$(_c, \"NearMe\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UserContext","Axios","Globals","ListedSongPlace","SUCCESS","FAIL","LOADING","UNKNOWN","NearMe","userContext","userId","songplaces","setSongplaces","sorted","setSorted","lat","setLat","long","setLong","retrieveStatus","setRetrieveStatus","get","then","response","status","console","log","data","catch","err","calcDistance","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","distance","orderByNearest","e","window","location","reload","preventDefault","sort","songplaceA","songplaceB","aDistance","latitude","longitude","bDistance","target","value","map","songplace","index"],"sources":["C:/Users/mmick/Documents/eget/songplacer/SongPlacer/frontend/src/pages/explore/NearMe.js"],"sourcesContent":["import {React, useState, useEffect, useContext} from 'react';\r\nimport { UserContext } from '../../context';\r\nimport Axios from 'axios';\r\nimport Globals from '../../globals/Globals.css';\r\nimport ListedSongPlace from '../../components/common/ListedSongplace';\r\n\r\nconst SUCCESS = 0;\r\nconst FAIL = 1;\r\nconst LOADING = 2;\r\nconst UNKNOWN = 3;\r\n\r\n\r\n\r\nconst NearMe = () => {\r\n\r\n    const userContext = useContext(UserContext);\r\n    const userId = userContext.userId;\r\n\r\n     //used to store/set songplaces \r\n     const [songplaces, setSongplaces] = useState();\r\n\r\n    //used to store/set songplaces ordered by proximity\r\n    const [sorted, setSorted] = useState(false);\r\n\r\n\r\n    //used to store/set user position\r\n    const [lat, setLat] = useState();\r\n    const [long, setLong] = useState();\r\n\r\n    const [retrieveStatus, setRetrieveStatus] = useState(UNKNOWN);\r\n\r\n\r\n    /**\r\n     * Fetches songplaces after render \r\n     */\r\n    useEffect(()=> {\r\n        Axios.get(\"http://localhost:3001/get-songplaces\").then((response) => {\r\n            if (response.status != 200) {\r\n                console.log(\"get songplaces response: \" + response);\r\n                setRetrieveStatus(FAIL);\r\n                return;\r\n            }   \r\n\r\n            setSongplaces(response.data);\r\n            setRetrieveStatus(SUCCESS);\r\n        }).catch((err) => {\r\n            console.log(\"get songplaces error\");\r\n            setRetrieveStatus(FAIL);\r\n        });\r\n    }, []);\r\n\r\n\r\n    /**\r\n     * Calculate distance between two points a and b of lat and long. \r\n     * Taken fromn: https://www.movable-type.co.uk/scripts/latlong.html\r\n     * @param aLat point a latitude\r\n     * @param aLong point a longitude\r\n     * @param bLat point b latitude\r\n     * @param bLong point b longitude\r\n     * @returns distance between given points\r\n     */\r\n    const calcDistance = (lat1, lon1, lat2, lon2) => {\r\n\r\n        const R = 6371e3; // metres\r\n        const φ1 = lat1 * Math.PI/180; // φ, λ in radians\r\n        const φ2 = lat2 * Math.PI/180;\r\n        const Δφ = (lat2-lat1) * Math.PI/180;\r\n        const Δλ = (lon2-lon1) * Math.PI/180;\r\n\r\n        const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\r\n                Math.cos(φ1) * Math.cos(φ2) *\r\n                Math.sin(Δλ/2) * Math.sin(Δλ/2);\r\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n\r\n        const distance = R * c; // in metres\r\n\r\n        console.log(\"distance: \" + distance);\r\n        \r\n        return distance;\r\n    }\r\n\r\n\r\n    /**\r\n     * Orders songplaces by proximity to given position and sets the variable: 'nearest'. \r\n     */\r\n    const orderByNearest = (e) => {\r\n        \r\n        //reset if songplaces already sorted\r\n        if (sorted) {\r\n            window.location.reload(true);\r\n        }\r\n\r\n        e.preventDefault();     //in order not to reload page\r\n\r\n        if (lat == null || long == null) {\r\n            return;\r\n        }\r\n\r\n        if (songplaces == null) {\r\n            setRetrieveStatus(FAIL);\r\n            return;\r\n        }\r\n\r\n        songplaces.sort(function(songplaceA, songplaceB) {\r\n            let aDistance = calcDistance(songplaceA.latitude, songplaceA.longitude, lat, long);\r\n            let bDistance = calcDistance(songplaceB.latitude, songplaceB.longitude, lat, long);\r\n\r\n            return aDistance - bDistance;\r\n        });\r\n\r\n        setSorted(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"margin-top\">\r\n            <form onSubmit={(e) => orderByNearest(e)}>\r\n                <label>\r\n                    <p>Latitude</p>\r\n                    <input\r\n                        required\r\n                        type=\"number\"\r\n                        min=\"-90\"\r\n                        max=\"90\"\r\n                        step=\"0.01\"\r\n                        onChange={(e) => setLat(e.target.value)}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <p>Longitude</p>\r\n                    <input\r\n                        required\r\n                        type=\"number\"\r\n                        min=\"-180\"\r\n                        max=\"180\"\r\n                        step=\"0.01\"\r\n                        onChange={(e) => setLong(e.target.value)}\r\n                    />\r\n                </label>\r\n                {\r\n                    sorted ?\r\n                            <div>\r\n                                <button type=\"submit\">Reset</button>\r\n                            </div>\r\n                        :\r\n                            <div>\r\n                                <button type=\"submit\">Get nearest music</button>\r\n                            </div>\r\n\r\n                }\r\n                \r\n            </form>\r\n            <hr/>\r\n            {\r\n                retrieveStatus === LOADING ? \r\n                        <h2>Loading...</h2>\r\n                    :\r\n                        <></>\r\n            }\r\n            {\r\n                retrieveStatus === FAIL ? \r\n                        <h2>Could not get songplaces</h2>\r\n                    :\r\n                        <></>\r\n            }\r\n            {\r\n                //return songplaces if they are retrieved and sorted\r\n                retrieveStatus === SUCCESS && sorted ? \r\n                    songplaces.map((songplace, index) => (\r\n                        <div>\r\n                            <ListedSongPlace songplace={songplace} key={index} isOwned={false} playlistId={-1}/>\r\n                        </div>   \r\n                    ))\r\n                :\r\n                    <></>\r\n            }                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NearMe;"],"mappings":"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"},"metadata":{},"sourceType":"module"}